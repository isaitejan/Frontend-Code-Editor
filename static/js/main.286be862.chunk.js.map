{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","components/App.js","index.js"],"names":["Editor","props","displayName","language","value","onChange","_useState","useState","_useState2","_slicedToArray","open","setOpen","React","createElement","className","concat","type","onClick","prevOpen","FontAwesomeIcon","icon","faCompressAlt","faExpandAlt","ControlledEditor","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","_useLocalStorage","_useLocalStorage2","html","setHtml","_useLocalStorage3","_useLocalStorage4","css","setCss","_useLocalStorage5","_useLocalStorage6","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","Fragment","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NAWe,SAASA,EAAOC,GAAO,IAE3BC,EAA0CD,EAA1CC,YAAaC,EAA6BF,EAA7BE,SAAUC,EAAmBH,EAAnBG,MAAOC,EAAYJ,EAAZI,SAAQC,EAErBC,oBAAS,GAAKC,EAAAC,YAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAMpB,OACII,IAAAC,cAAA,OAAKC,UAAS,oBAAAC,OAAsBL,EAAO,GAAI,cAC3CE,IAAAC,cAAA,OAAKC,UAAU,gBACVZ,EACDU,IAAAC,cAAA,UACAG,KAAK,SACLF,UAAU,sBACNG,QAAS,kBAAKN,EAAQ,SAAAO,GAAQ,OAAKA,MAEnCN,IAAAC,cAACM,IAAe,CAACC,KAAMV,EAAMW,IAAeC,QAGpDV,IAAAC,cAACU,aAAgB,CACbC,eAjBZ,SAAsBC,EAAQC,EAAMtB,GAChCC,EAASD,IAiBDA,MAAOA,EACPU,UAAU,sBACVa,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAM3B,EACN4B,MAAO,WACPC,aAAa,MCxCjC,IAAMC,EAAS,iBAEA,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAAcJ,EAAUE,EAAG7B,EAEPC,mBAAS,WAC/B,IAAM+B,EAAYC,aAAaC,QAAQH,GAEvC,OAAgB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACCA,IAEAA,IAEb5B,EAAAC,YAAAH,EAAA,GAVKF,EAAKI,EAAA,GAAEmC,EAAQnC,EAAA,GAiBtB,OAJAoC,oBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU1C,KAClD,CAACiC,EAAajC,IAEV,CAACA,EAAOuC,GCqCJI,MAzDf,WAAe,IAAAC,EAEWd,EAAgB,OAAO,IAAGe,EAAAxC,YAAAuC,EAAA,GAA3CE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAAAG,EACElB,EAAgB,MAAM,IAAGmB,EAAA5C,YAAA2C,EAAA,GAAxCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GAAAG,EACEtB,EAAgB,KAAK,IAAGuB,EAAAhD,YAAA+C,EAAA,GAArCE,EAAED,EAAA,GAAEE,EAAKF,EAAA,GAAAnD,EACYC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAjCsD,EAAMpD,EAAA,GAAEqD,EAASrD,EAAA,GAgBxB,OAdAoC,oBAAU,WACR,IAAMkB,EAAUC,WAAW,WACzBF,EAAS,iCAAA9C,OAECmC,EAAI,4BAAAnC,OACHuC,EAAG,8BAAAvC,OACF2C,EAAE,uCAGd,KAEF,OAAO,kBAAKM,aAAaF,KACxB,CAACZ,EAAMI,EAAKI,IAGT9C,IAAAC,cAAAD,IAAAqD,SAAA,KACErD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAACb,EAAM,CACLG,SAAS,MACTD,YAAY,OACZE,MAAO8C,EACP7C,SAAU8C,IAEZvC,IAAAC,cAACb,EAAM,CACLG,SAAS,MACTD,YAAY,MACZE,MAAOkD,EACPjD,SAAUkD,IAEZ3C,IAAAC,cAACb,EAAM,CACLG,SAAS,aACTD,YAAY,KACZE,MAAOsD,EACPrD,SAAUsD,KAGd/C,IAAAC,cAAA,OAAKC,UAAU,SACbF,IAAAC,cAAA,UACE+C,OAAQA,EACRM,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,YCjDrBC,IAASC,OACP5D,IAAAC,cAACD,IAAM6D,WAAU,KACf7D,IAAAC,cAACkC,EAAG,OAEN2B,SAASC,eAAe","file":"static/js/main.286be862.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'codemirror/lib/codemirror.css'\r\nimport 'codemirror/theme/material.css'\r\nimport 'codemirror/mode/xml/xml'\r\nimport 'codemirror/mode/css/css'\r\nimport 'codemirror/mode/javascript/javascript'\r\nimport { Controlled as ControlledEditor } from 'react-codemirror2'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nexport default function Editor(props) {\r\n\r\n    const {displayName, language, value, onChange} = props;\r\n\r\n    const [open, setOpen] = useState(true)\r\n\r\n    function handleChange(editor, data, value){\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '': 'collapsed'}`}>\r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                type='button'\r\n                className='expand-collapse-btn'\r\n                    onClick={()=> setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open? faCompressAlt: faExpandAlt} />\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true\r\n                }}\r\n            />\r\n        </div>\r\n  )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = 'codepen-clone-'\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX  + key\r\n\r\n    const [value, setValue] = useState(()=>{\r\n        const jsonValue = localStorage.getItem(prefixedKey)\r\n\r\n        if(jsonValue != null) return JSON.parse(jsonValue)\r\n\r\n        if(typeof initialValue === 'function'){\r\n            return initialValue()\r\n        }else{\r\n            return initialValue\r\n        }\r\n    })\r\n    \r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue];\r\n}\r\n","import React, { useEffect, useState } from \"react\";\nimport Editor from \"./Editor\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nfunction App() {\n\n  const [html, setHtml] = useLocalStorage('html','')\n  const [css, setCss] = useLocalStorage('css','')\n  const [js, setJs] = useLocalStorage('js','')\n  const [srcDoc, setSrcDoc] = useState('')\n\n  useEffect(()=>{\n    const timeout = setTimeout(()=>{\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n      </html>\n      `)\n    },250)\n\n    return ()=> clearTimeout(timeout)\n  }, [html, css, js])\n\n  return (\n        <>\n          <div className=\"pane top-pane\">\n            <Editor \n              language=\"xml\" \n              displayName=\"HTML\"\n              value={html}\n              onChange={setHtml}\n            ></Editor>\n            <Editor \n              language=\"css\"\n              displayName=\"CSS\"\n              value={css}\n              onChange={setCss}\n            />\n            <Editor \n              language=\"javascript\"\n              displayName=\"JS\"\n              value={js}\n              onChange={setJs}\n            />\n          </div>\n          <div className=\"pane \">\n            <iframe\n              srcDoc={srcDoc}\n              title=\"output\"\n              sandbox=\"allow-scripts\"\n              frameBorder=\"0\"\n              width=\"100%\"\n              height=\"100%\"\n            />\n          </div>\n        </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}